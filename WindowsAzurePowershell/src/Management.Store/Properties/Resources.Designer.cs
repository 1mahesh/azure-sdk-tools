//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18010
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.WindowsAzure.Management.Store.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.WindowsAzure.Management.Store.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add-On {0} is created successfully..
        /// </summary>
        internal static string AddOnCreatedMessage {
            get {
                return ResourceManager.GetString("AddOnCreatedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add-on name {0} is already used..
        /// </summary>
        internal static string AddOnNameAlreadyUsed {
            get {
                return ResourceManager.GetString("AddOnNameAlreadyUsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add-On {0} not found..
        /// </summary>
        internal static string AddOnNotFound {
            get {
                return ResourceManager.GetString("AddOnNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add-on {0} is removed successfully..
        /// </summary>
        internal static string AddOnRemovedMessage {
            get {
                return ResourceManager.GetString("AddOnRemovedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add-On {0} is updated successfully..
        /// </summary>
        internal static string AddOnUpdatedMessage {
            get {
                return ResourceManager.GetString("AddOnUpdatedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to http://www.windowsazure.com/en-us/store/service/?id={0}.
        /// </summary>
        internal static string AddOnUrl {
            get {
                return ResourceManager.GetString("AddOnUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add-ons for {0}.
        /// </summary>
        internal static string CloudServiceDescription {
            get {
                return ResourceManager.GetString("CloudServiceDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The HTTP request was forbidden with client authentication scheme &apos;Anonymous&apos;..
        /// </summary>
        internal static string FirstPurchaseErrorMessage {
            get {
                return ResourceManager.GetString("FirstPurchaseErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This add-on requires you to purchase the first instance through the Windows Azure Portal. Subsequent purchases can be performed through PowerShell..
        /// </summary>
        internal static string FirstPurchaseMessage {
            get {
                return ResourceManager.GetString("FirstPurchaseMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Getting all available Windows Azure Add-Ons, this may take few minutes....
        /// </summary>
        internal static string GetAllAddOnsWaitMessage {
            get {
                return ResourceManager.GetString("GetAllAddOnsWaitMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The country name is invalid, please use a valid two character country code, as described in ISO 3166-1 alpha-2..
        /// </summary>
        internal static string InvalidCountryNameMessage {
            get {
                return ResourceManager.GetString("InvalidCountryNameMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to http://api.datamarket.azure.com/CatalogService.svc.
        /// </summary>
        internal static string MarketplaceEndpoint {
            get {
                return ResourceManager.GetString("MarketplaceEndpoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple Add-Ons found holding name {0}.
        /// </summary>
        internal static string MultipleAddOnsFoundMessage {
            get {
                return ResourceManager.GetString("MultipleAddOnsFoundMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Add-On Confirmation.
        /// </summary>
        internal static string NewAddOnConformation {
            get {
                return ResourceManager.GetString("NewAddOnConformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By typing &quot;Yes&quot;, I (a) authorize Microsoft to charge my current payment method on a monthly basis 
        ///for the amount indicated at {0} for {1} until my service is cancelled or terminated, and (b) 
        ///agree to the {2}&apos;s terms of user and privacy statement at {0} and (c) agree to sharing my 
        ///contact information with {2}..
        /// </summary>
        internal static string NewMicrosoftAddOnMessage {
            get {
                return ResourceManager.GetString("NewMicrosoftAddOnMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By typing &quot;Yes&quot;, I (a) authorize Microsoft to charge my current payment method on a monthly basis 
        ///for the amount indicated at {0} for {1} until my service is cancelled or terminated, and (b) 
        ///acknowledge the offering is provided by {2}, not Microsoft, and agree to {2}&apos;s terms of 
        ///use and privacy statement at {0} and (c) agree to sharing my contact information with {2}..
        /// </summary>
        internal static string NewNonMicrosoftAddOnMessage {
            get {
                return ResourceManager.GetString("NewNonMicrosoftAddOnMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate can&apos;t be null..
        /// </summary>
        internal static string NullCertificateMessage {
            get {
                return ResourceManager.GetString("NullCertificateMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The request offer &apos;{0}&apos; is not found..
        /// </summary>
        internal static string OfferNotFoundMessage {
            get {
                return ResourceManager.GetString("OfferNotFoundMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The REST operation failed with message &apos;{0}&apos; and error code &apos;{1}&apos;.
        /// </summary>
        internal static string OperationFailedMessage {
            get {
                return ResourceManager.GetString("OperationFailedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Promotion code can be used only when updating to a new plan..
        /// </summary>
        internal static string PromotionCodeWithCurrentPlanMessage {
            get {
                return ResourceManager.GetString("PromotionCodeWithCurrentPlanMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Add-On Confirmation.
        /// </summary>
        internal static string RemoveAddOnConformation {
            get {
                return ResourceManager.GetString("RemoveAddOnConformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you delete this add-on, your data may be deleted and the operation may not be undone.  You may have to purchase it again from the Windows Azure Store to use it. The price of the add-on  may not be refunded. Are you sure you want to delete this add-on? Enter “Yes” to confirm..
        /// </summary>
        internal static string RemoveAddOnMessage {
            get {
                return ResourceManager.GetString("RemoveAddOnMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set Add-On Confirmation.
        /// </summary>
        internal static string SetAddOnConformation {
            get {
                return ResourceManager.GetString("SetAddOnConformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note - You will be charged the amount for the new plan, without being refunded for time remaining 
        ///in the existing plan.
        ///By typing &quot;Yes&quot;, I (a) authorize Microsoft to charge my current payment method on a monthly basis 
        ///for the amount indicated at {0} for {1} until my service is cancelled or terminated, and (b) 
        ///agree to the {2}&apos;s terms of user and privacy statement at {0} and (c) agree to sharing my 
        ///contact information with {2}..
        /// </summary>
        internal static string SetMicrosoftAddOnMessage {
            get {
                return ResourceManager.GetString("SetMicrosoftAddOnMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note - You will be charged the amount for the new plan, without being refunded for time remaining 
        ///in the existing plan.
        ///By typing &quot;Yes&quot;, I (a) authorize Microsoft to charge my current payment method on a monthly basis 
        ///for the amount indicated at {0} for {1} until my service is cancelled or terminated, and (b) 
        ///acknowledge the offering is provided by {2}, not Microsoft, and agree to {2}&apos;s terms of 
        ///use and privacy statement at &lt;url&gt; and (c) agree to sharing my contact information with {2}..
        /// </summary>
        internal static string SetNonMicrosoftAddOnMessage {
            get {
                return ResourceManager.GetString("SetNonMicrosoftAddOnMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provider {0} is unknown..
        /// </summary>
        internal static string UnknownProviderMessage {
            get {
                return ResourceManager.GetString("UnknownProviderMessage", resourceCulture);
            }
        }
    }
}
